# 设置分级目录
SET(CMAKE_ALLOW_LOOSE_LOOP_CONSTRUCTS TRUE)
SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)

# 定义最小cmake版本
IF(WIN32)
    CMAKE_MINIMUM_REQUIRED(VERSION 2.4.6 FATAL_ERROR)
ELSE(WIN32)
    IF(APPLE)
        CMAKE_MINIMUM_REQUIRED(VERSION 2.6.0 FATAL_ERROR)
    ELSE(APPLE)
        CMAKE_MINIMUM_REQUIRED(VERSION 2.4.4 FATAL_ERROR)
    ENDIF(APPLE)
ENDIF(WIN32)

# 解决方案名称
PROJECT(VictorRoutine)

SET(CMAKE_USE_RELATIVE_PATHS OFF)

# 头文件目录
INCLUDE_DIRECTORIES(
	${PROJECT_SOURCE_DIR}/include
)
# 库文件目录
LINK_DIRECTORIES(
		${PROJECT_SOURCE_DIR}/lib
)

# 设置导出对象和库路径
SET(CMAKE_RELEASE_POSTFIX "" CACHE STRING "add a postfix, usually empty on windows")
SET(CMAKE_DEBUG_POSTFIX "d" CACHE STRING "add a postfix, usually d on windows" )

SET(OUTPUT_BINDIR ${PROJECT_BINARY_DIR}/output/bin)
SET(OUTPUT_LIBDIR ${PROJECT_BINARY_DIR}/output/lib)

IF(CMAKE_MAJOR_VERSION EQUAL 2 AND CMAKE_MINOR_VERSION LESS 5)
    # If CMake < 2.6.0
    SET(EXECUTABLE_OUTPUT_PATH ${OUTPUT_BINDIR})
    SET(LIBRARY_OUTPUT_PATH    ${OUTPUT_LIBDIR})
ELSE()
    # If CMake >= 2.6.0
    SET(CMAKE_ARCHIVE_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})
    SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${OUTPUT_BINDIR})
    IF(WIN32)
        SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_BINDIR})
    ELSE(WIN32)
        SET(CMAKE_LIBRARY_OUTPUT_DIRECTORY ${OUTPUT_LIBDIR})
    ENDIF(WIN32)
    # # Testing CMAKE_VERSION is possible in >= 2.6.4 only
    # BUILDER_VERSION_GREATER(2 8 0)
    # IF(VALID_BUILDER_VERSION)  # If CMake >= 2.8.1
        # FOREACH(CONF ${CMAKE_CONFIGURATION_TYPES})	# For each configuration (Debug, Release, MinSizeRel... and/or anything the user chooses)
            # STRING(TOUPPER "${CONF}" CONF)			# Go uppercase (DEBUG, RELEASE...)
            # SET("CMAKE_ARCHIVE_OUTPUT_DIRECTORY_${CONF}" "${OUTPUT_LIBDIR}")
            # SET("CMAKE_RUNTIME_OUTPUT_DIRECTORY_${CONF}" "${OUTPUT_BINDIR}")
            # IF(WIN32)
                # SET("CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CONF}" "${OUTPUT_BINDIR}")
            # ELSE()
                # SET("CMAKE_LIBRARY_OUTPUT_DIRECTORY_${CONF}" "${OUTPUT_LIBDIR}")
            # ENDIF()
        # ENDFOREACH()
    # ENDIF(VALID_BUILDER_VERSION)
ENDIF()

# 添加调试信息
OPTION ( OPEN_DEBUG_INFO OFF )
IF(OPEN_DEBUG_INFO)
	SET(CMAKE_DEBUG_POSTFIX "d")
	IF(MSVC)
        ADD_DEFINITIONS(/Zi)
		#ADD_DEFINITIONS(/Ob0)
		#ADD_DEFINITIONS(/Od)
		SET (CMAKE_MODULE_LINKER_FLAGS "/DEBUG")
		SET (CMAKE_EXE_LINKER_FLAGS "/DEBUG")
		SET (CMAKE_SHARED_LINKER_FLAGS "/DEBUG")
		SET (LINK_FLAGS "/INCREMENTAL")
    ELSE(MSVC)
        SET(CMAKE_BUILD_TYPE Debug)
    ENDIF(MSVC)
ELSE(OPEN_DEBUG_INFO)
    IF(MSVC)
        
    ELSE(MSVC)
        SET(CMAKE_BUILD_TYPE Release)
    ENDIF(MSVC)
ENDIF(OPEN_DEBUG_INFO)

# 设置cmake模块路径
SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMakeFind)
INCLUDE(LinkMacro)

# 添加子目录
ADD_SUBDIRECTORY(source)
